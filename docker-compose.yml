services:
  db:
    image: postgres:15-alpine
    container_name: student-bot-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: phe
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432" # Опционально: для доступа к БД с хоста
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d phe"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: unless-stopped
    networks:
      - student-bot-network

  bot:
    build: .
    container_name: student-bot-app
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      # Пробрось порт для бэкенда WebApp, если он работает в этом контейнере
      - "8080:8080" # Пример для порта 8080
    restart: unless-stopped
    networks:
      - student-bot-network
    # Если CMD в Dockerfile недостаточно (нужно запустить бэкенд + бота),
    # можно использовать 'command:' здесь, например:
    # command: sh -c "python backend.py & python client.py"

volumes:
  dbdata:

networks:
  student-bot-network:
    driver: bridge